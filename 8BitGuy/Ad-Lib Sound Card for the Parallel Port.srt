1
00:00:11,400 --> 00:00:13,340
欢迎来到新一集的 8-Bit Guy

2
00:00:13,340 --> 00:00:18,660
在之前的一集里我有介绍这个 Covox 克隆品

3
00:00:18,920 --> 00:00:25,520
这么一来我最喜欢的 486 DOS 笔记本就可以在
玩游戏的时候有声音了

4
00:00:25,520 --> 00:00:28,940
不只是 PC 喇叭的声音，我非常兴奋

5
00:00:29,320 --> 00:00:34,480
然而不是所有游戏都兼容，只能支持一些游戏

6
00:00:34,480 --> 00:00:37,020
这些游戏是通过 Tandy 模拟器来实现运作的

7
00:00:37,360 --> 00:00:43,480
不过这一集之后不久，它的作者就发邮件问我

8
00:00:43,480 --> 00:00:48,540
“嘿 AB 钙，你觉得把 Adlib 塞进差不多的并口扩展卡
如何呢？”

9
00:00:49,160 --> 00:00:56,900
“这就很有趣了。我从没想过你会把
 YM3812 放进这样的扩展卡里。”

10
00:00:57,260 --> 00:01:02,380
我还对它能不能兼容现有的 DOS 游戏产生了质疑

11
00:01:02,880 --> 00:01:06,460
最近我就收到了这个套件，他说这已经完工了

12
00:01:07,440 --> 00:01:10,360
我要做的就是把这个卡组装起来

13
00:01:10,360 --> 00:01:16,160
然后装到我的 486 上看看能不能用

14
00:01:16,160 --> 00:01:17,620
那就开始动手吧

15
00:01:18,940 --> 00:01:21,220
好了，先看看里面有什么

16
00:01:22,600 --> 00:01:29,080
里面有一些小零件，但看起来不是那么可怕。这是整个电路板

17
00:01:29,080 --> 00:01:33,760
这就是核心了，雅马哈 YM3812

18
00:01:33,760 --> 00:01:37,520
很难想象现在还能买到全新的这个芯片
(在中国这种芯片要多少有多少

19
00:01:37,520 --> 00:01:39,980
我还不知道现在能拿来干什么

20
00:01:39,980 --> 00:01:43,420
这个和上世纪 80 年代的完全一样

21
00:01:43,620 --> 00:01:49,260
你可以把它放进原装 Adlib 声卡或是老雅马哈键盘上，
然后就能用了

22
00:01:49,260 --> 00:01:52,560
接下来就是开始组装了，如果不想看这一部分的话

23
00:01:52,560 --> 00:01:55,040
请空降到 8:30

24
00:01:55,040 --> 00:02:00,720
他给我了这些资料，他说正在为之后的顾客写组装教程

25
00:02:00,720 --> 00:02:04,960
我就收到了一个原型设备，这也就是我要做的了

26
00:02:04,960 --> 00:02:10,880
也不是很难理解，这些都是电容，毕竟 C 开头

27
00:02:10,880 --> 00:02:15,820
J 是跳线头，R 是电阻，等等

28
00:02:15,820 --> 00:02:18,580
我们要做的就是看这个布局图来挑选一个部件

29
00:02:18,580 --> 00:02:26,840
比如说这个 C3，在 BOM 表上是这一个

30
00:02:26,840 --> 00:02:32,800
先焊这个插座，出于各种原因我喜欢先从矮的元件开始焊接

31
00:02:32,800 --> 00:02:38,440
焊的时候要注意这个插座缺口的方向

32
00:02:38,440 --> 00:02:42,900
然后就是焊上两边的引脚

33
00:02:42,900 --> 00:02:46,620
我就可以翻面看看是不是焊到位了

34
00:02:46,620 --> 00:02:51,280
顺便可以检查缺口是不是对上了

35
00:02:51,280 --> 00:02:54,460
借这次机会跟大家说一下

36
00:02:54,460 --> 00:02:59,660
每次我要演示焊接的时候，总会有人批判我的焊接技术

37
00:02:59,660 --> 00:03:06,160
从电烙铁的温度，到什么角度焊接

38
00:03:06,300 --> 00:03:10,560
甚至还有人说“德州人应该这么读 solder 才清真”

39
00:03:10,560 --> 00:03:12,560
因为字母 L 不发音

40
00:03:12,560 --> 00:03:16,560
我可从没说过我是这方面的专家

41
00:03:16,560 --> 00:03:19,060
也没人教我焊接

42
00:03:19,060 --> 00:03:27,540
我大概从 12 岁的时候就自学焊接，编程和音乐也是一样的

43
00:03:27,540 --> 00:03:34,060
我所做的完全是按照个人经验，我也不保证我做的是最好的方法

44
00:03:34,060 --> 00:03:36,240
这就是我的免责声明

45
00:03:36,240 --> 00:03:41,700
我在焊 USB 供电口的时候相机没录下来，不过绝对是最不好焊的部分

46
00:03:41,700 --> 00:03:43,900
引脚太细了

47
00:03:44,620 --> 00:03:49,840
然后是焊晶振，这个不分极性的

48
00:03:49,840 --> 00:03:55,720
完美怼进去，弯一下引脚，焊接

49
00:03:56,320 --> 00:04:01,780
好了，然后就是剪掉多余的引脚

50
00:04:01,780 --> 00:04:06,700
然后是焊接这个 14 脚 IC，没有插座

51
00:04:06,700 --> 00:04:11,180
还是要对准芯片缺口的位置确保方向正确

52
00:04:11,180 --> 00:04:14,920
还有一个问题，就是 IC 两边的引脚距离太宽了

53
00:04:14,920 --> 00:04:16,540
装不进板子

54
00:04:16,540 --> 00:04:22,180
我一般的做法是把它抵在工作台上往里面弯一点

55
00:04:22,180 --> 00:04:26,660
两边处理完之后装进去就很容易了

56
00:04:26,660 --> 00:04:30,000
好了装进来了，然后就是焊接了

57
00:04:30,920 --> 00:04:37,100
如果你不知道为什么要从以低到高的顺序焊接，
原因是这样焊起来就比较容易

58
00:04:37,100 --> 00:04:40,000
我需要在把板子翻面的时候保持元件原样

59
00:04:40,000 --> 00:04:46,940
如果你已经焊了较高的元件，焊比较低的元件就容易掉，
除非你找到了合适的固定方法

60
00:04:46,940 --> 00:04:52,980
然后是这个复位开关，因为合成器芯片是外置供电的，
你需要使用它

61
00:04:52,980 --> 00:04:57,500
如果在玩游戏的中途把电脑关掉了，那它就会卡死而不是关机

62
00:04:57,500 --> 00:04:59,920
你就可以通过按这个按钮重置芯片

63
00:04:59,920 --> 00:05:05,520
这个按钮因为看起来是正方形的，容易装错

64
00:05:05,530 --> 00:05:10,030
实际上它更趋近于矩形，因此不可能装错

65
00:05:10,030 --> 00:05:13,480
就是要大力怼进去

66
00:05:13,480 --> 00:05:18,760
然后就是焊这些排电阻，它们需要按照一定的方向焊上去

67
00:05:18,760 --> 00:05:22,040
你就要注意上面的点，那个对应的是第一个引脚

68
00:05:22,040 --> 00:05:26,620
在这个板子上，第一个引脚就是方形的焊盘

69
00:05:26,620 --> 00:05:31,360
第一个排电阻怼在这里，另一个在这里

70
00:05:31,360 --> 00:05:34,960
然后是这个耳机/线路输出插座

71
00:05:35,000 --> 00:05:38,380
就我的理解来看应该需要运放才能正确运转

72
00:05:38,680 --> 00:05:42,920
怼进这里，然后一起焊上去

73
00:05:42,920 --> 00:05:48,120
然后是焊这个电阻，幸运的是他标注了阻值

74
00:05:48,120 --> 00:05:51,160
对我这种没法辨认色环的人来讲就是福音

75
00:05:51,480 --> 00:05:53,920
这样我也不需要拿万用表测了

76
00:05:53,920 --> 00:05:59,860
然而这个电阻焊上去的方法很奇特——要垂直焊接

77
00:06:00,500 --> 00:06:03,560
把两边的标签撕下来，给你看看是什么意思

78
00:06:04,180 --> 00:06:09,200
把一边的引脚弯几乎 180 度，就像这样

79
00:06:10,060 --> 00:06:12,680
然后这么装进板子里

80
00:06:12,960 --> 00:06:18,240
这么一来板子看起来就更加紧凑，焊接倒是没区别

81
00:06:18,600 --> 00:06:24,640
这就是垂直电阻的样子，所有的电阻都应该这样焊上去

82
00:06:25,360 --> 00:06:28,760
到这里，我已经把所有电阻都焊到位了

83
00:06:30,240 --> 00:06:34,740
然后是这个瓷片电阻，上面的字太小了

84
00:06:34,740 --> 00:06:37,960
我必须要用放大镜才能看清楚

85
00:06:37,960 --> 00:06:43,560
就像这样怼进去，因为没有极性，可以不分正反面插进去

86
00:06:44,100 --> 00:06:48,860
然后是一组跳线，我想这是用来低音强化什么的

87
00:06:48,860 --> 00:06:51,140
就像这样装上去

88
00:06:51,140 --> 00:06:58,080
这里还有很多电解电容，区分极性，你可以看见这里的白色条纹

89
00:06:58,080 --> 00:07:03,140
那就是负极，你要对准圆圈比较粗的那一面

90
00:07:03,140 --> 00:07:06,400
你应该也注意到短引脚就是负极

91
00:07:06,900 --> 00:07:13,100
把所有电容焊起来之后就像这样子，接下来是焊 LED

92
00:07:13,100 --> 00:07:19,500
你可能想知道正负极方向，一个引脚比另一个长

93
00:07:19,500 --> 00:07:24,600
长正短负，就像前面的电解电容

94
00:07:25,300 --> 00:07:32,160
还有一个大件要焊接，只要对准怼进去

95
00:07:32,220 --> 00:07:36,080
两边的螺丝孔不传导任何信号

96
00:07:36,080 --> 00:07:42,260
就是用来固定接口和插拔时保持牢固用的

97
00:07:42,880 --> 00:07:48,420
你要在两边焊上大量焊锡固定起来，这就好了

98
00:07:49,920 --> 00:07:53,540
然后装这两个芯片，先从这个小的开始

99
00:07:53,540 --> 00:07:56,040
注意芯片的方向

100
00:07:56,040 --> 00:08:03,100
然后是整个板子的核心 YM3812 ——行了

101
00:08:03,100 --> 00:08:06,740
你以为到这里就结束了？还有一个东西

102
00:08:06,740 --> 00:08:15,540
这是我最不喜欢的，因为它是这样子怼进去的

103
00:08:15,540 --> 00:08:20,200
你要做的就是把引脚像这样弯 90 度

104
00:08:20,200 --> 00:08:25,320
然后装进去，就可以焊接了

105
00:08:26,780 --> 00:08:31,300
好了，该试一试了，我用我最喜欢的 486 笔记本

106
00:08:31,300 --> 00:08:33,740
唯一的缺点就是没声卡

107
00:08:34,220 --> 00:08:38,060
电源供电的话，我就用这个 USB 数据线和 iPhone 充电器

108
00:08:41,360 --> 00:08:45,400
比起外接扬声器，我会接到这个 USB 录音笔上

109
00:08:45,400 --> 00:08:50,260
这样就可以清晰听到效果了，然后看看会如何

110
00:08:51,340 --> 00:08:57,440
它附带了一个小程序叫做 OPL2TEST，
用来测试板子是否正常运转

111
00:09:01,220 --> 00:09:03,300
hhh看来能用

112
00:09:11,780 --> 00:09:16,940
在继续之前我先给你介绍一下设计和术语

113
00:09:17,660 --> 00:09:23,760
它叫 OPL2LPT，我应该跟你解释一下原因

114
00:09:23,760 --> 00:09:32,500
OPL2 指的是音频芯片的类型，LPT 是 DOS 下的一个概念
“本地打印终端”或就是“并行接口”

115
00:09:32,800 --> 00:09:36,500
先看看这个音频芯片

116
00:09:36,500 --> 00:09:43,040
雅马哈 YM3812 是 FM 合成器芯片，又称作 OPL2

117
00:09:43,040 --> 00:09:46,740
指的是 L 型 FM 操作器版本 2

118
00:09:47,120 --> 00:09:50,460
它被用到了各类知名的声卡上面，首先是 Adlib

119
00:09:50,520 --> 00:09:54,400
紧接着是声霸卡和 Pro Audio Spectrum

120
00:09:54,740 --> 00:10:00,640
然后雅马哈推出了能够向下兼容的 YMF262 芯片

121
00:10:00,640 --> 00:10:06,160
还比前代提供了更多的声部和波形，又被称作 OPL3

122
00:10:06,160 --> 00:10:10,460
用到了像声霸卡 16、Pro Audio Spectrum 16 上

123
00:10:10,460 --> 00:10:14,140
还有像 ESS AudioDrive 和 Crystal Audio 这样的兼容卡

124
00:10:14,140 --> 00:10:22,560
两个芯片技术上来讲都兼容 Adlib，但是绝大多数游戏
支持的是 OPL2 芯片

125
00:10:22,560 --> 00:10:26,420
这就是我这次展示的了

126
00:10:26,420 --> 00:10:32,420
首先没有 DOS 游戏能够原生兼容它

127
00:10:32,420 --> 00:10:38,460
Adlib 声卡总是会被接到电脑总线的 388h 上

128
00:10:38,460 --> 00:10:43,580
但是并口在 378h 端口上，如何处理呢

129
00:10:43,920 --> 00:10:49,860
有多种方法解决问题，目前最实用的方法就是加载附带的驱动

130
00:10:49,860 --> 00:10:52,440
玩游戏之前先加载起来

131
00:10:52,440 --> 00:10:59,720
它所做的就是将所有发送到 388h 端口的数据转发到 378h 处理

132
00:10:59,720 --> 00:11:03,240
这就是我首先要尝试的了

133
00:11:03,240 --> 00:11:10,320
首先就是加载这个驱动，你可以写进 autoexec 自动加载

134
00:11:10,320 --> 00:11:16,800
这就加载起来了，然后运行我喜欢的一款 DOS 游戏，
那个游戏有不错的音乐

135
00:11:32,040 --> 00:11:37,480
这真是太棒了，要知道此前我从没听过
从这个 486 笔记本播放的这样的音乐

136
00:11:38,260 --> 00:11:41,600
声音听起来很完美，并不是模拟的

137
00:11:41,600 --> 00:11:43,260
而是真的

138
00:11:44,480 --> 00:11:52,660
我这么说很容易被人说不清真，但我更喜欢 Adlib 版
的 Lemmings 的音乐而不是 Amiga 版的

139
00:11:52,660 --> 00:11:57,300
我花了很长时间玩两种版本的这个游戏，两个都很不错

140
00:11:57,300 --> 00:12:02,700
不过 Adlib 版额外的声部听起来就更加丰富

141
00:12:02,700 --> 00:12:09,720
然而 Amiga 只有四个声部，其中一个必须是音效，
因此音乐就只有三个声部了

142
00:12:09,720 --> 00:12:13,160
Adlib 玩这游戏确实很不错

143
00:12:16,540 --> 00:12:20,820
就是必须承认 Amiga 的音效听起来更好

144
00:12:20,820 --> 00:12:24,780
我也很喜欢 Amiga 版 Lemmings 摔死的音效

145
00:12:25,220 --> 00:12:28,480
在 Adlib 版本听起来就是轻微的飞溅声

146
00:12:37,580 --> 00:12:39,580
然后是下一个游戏

147
00:12:55,620 --> 00:13:03,480
Atomino 就是我喜欢的一款游戏，
我在 Amiga、DOS 和 C64 上玩了很久

148
00:13:03,480 --> 00:13:07,360
我问别人这个游戏的时候，他们说从没听说过

149
00:13:07,500 --> 00:13:13,160
三种版本都是根据硬件拥有独具特色的音乐

150
00:13:18,700 --> 00:13:21,220
再来一个大家都熟悉的游戏

151
00:13:27,420 --> 00:13:30,000
哦我爱死这游戏的音乐了

152
00:13:30,380 --> 00:13:33,920
这就是为什么我觉得 Adlib 版听起来很好的原因

153
00:13:33,920 --> 00:13:41,200
可能比其它声卡听起来都好，我还是说
这个比 MT-32 版都要好

154
00:13:42,360 --> 00:13:49,500
我还得说的是 Ultima 6 只会从 Adlib 播放音乐，
音效只会从 PC 喇叭放出来

155
00:13:49,540 --> 00:13:51,200
就像这个样子

156
00:14:05,340 --> 00:14:10,620
来试试下一个游戏，这个游戏的重点并非音乐，
而是用 Adlib 播放音效

157
00:14:16,200 --> 00:14:21,440
听起来还可以？开几枪听听更多音效

158
00:14:27,300 --> 00:14:29,860
然后再听听其它的带音乐的游戏

159
00:14:41,200 --> 00:14:45,680
Sierra 是第一家帮助了 Adlib 走向成功的公司

160
00:14:45,680 --> 00:14:51,520
他们的所有游戏都支持 Adlib，调教得也很好

161
00:15:07,060 --> 00:15:13,020
看起来所有上世纪 80 年代的游戏玩起来都没毛病

162
00:15:16,040 --> 00:15:22,220
然后我就想，Adlib 能播放数字采样并不广为人知

163
00:15:22,220 --> 00:15:29,200
就是用的不多，因为没有任何形式的 DMA，
必须完全交给 CPU 处理

164
00:15:29,200 --> 00:15:31,840
就像用 PC 喇叭播放采样一样

165
00:15:31,840 --> 00:15:37,760
我想也许可以试试几款用到了 Adlib 播放数字采样的游戏，
先试试这款

166
00:15:39,720 --> 00:15:41,860
先生们，发动引擎！
Gentlemen, start the engine!

167
00:15:44,820 --> 00:15:47,120
令我惊讶的是能完美使用

168
00:15:50,880 --> 00:15:54,200
就我的了解来看，它没有音乐只有音效

169
00:16:02,580 --> 00:16:09,660
再试试一款游戏，用到了数字采样音乐和音效——
《幻想弹珠台》

170
00:16:22,380 --> 00:16:27,880
同样能完美使用，听起来比 PC 喇叭强太多了

171
00:16:36,200 --> 00:16:43,520
这个卡配上驱动理论上可以玩所有 80 年代的 DOS 游戏

172
00:16:43,520 --> 00:16:51,600
就是有一些小问题，极少数游戏，像这个俄罗斯方块，
表现就有点不太正常

173
00:16:51,600 --> 00:16:55,620
确实播放出音乐了，但是播放速度比较慢

174
00:16:55,620 --> 00:17:03,880
节奏在这里拖慢了，实际速度应该要比这个快 50%

175
00:17:03,880 --> 00:17:09,560
然而音效没问题，我就不知道是哪里出了问题了

176
00:17:09,560 --> 00:17:12,300
然后是告诉你一个坏消息

177
00:17:12,300 --> 00:17:15,700
它至少需要使用 386 处理器

178
00:17:15,700 --> 00:17:19,880
你就不能在 8086 或是 80286 上使用它

179
00:17:19,880 --> 00:17:30,260
这是因为 386 处理器具备一些特殊的功能，能够
进行模拟中转端口操作并转发过去

180
00:17:30,260 --> 00:17:37,280
因此，所有要求 386 强化模式的游戏和驱动不兼容

181
00:17:37,280 --> 00:17:41,680
因此绝大多数 90 年代的游戏要求更高配置

182
00:17:41,680 --> 00:17:43,920
这就和这个外设不兼容了

183
00:17:43,920 --> 00:17:48,540
别失望，还有一种办法可以解决问题

184
00:17:48,540 --> 00:17:51,660
那就是给游戏打补丁

185
00:17:51,660 --> 00:17:58,620
如果你修改了机器代码将本来发到 388 的指令发到 378

186
00:17:58,880 --> 00:18:03,440
那游戏就不需要驱动了，就是原生写进 378 端口

187
00:18:03,720 --> 00:18:09,060
比如说这个游戏 Heretic，你要运行这个 ADPATCH 程序

188
00:18:09,060 --> 00:18:14,580
要加上一些参数对游戏打补丁处理

189
00:18:14,580 --> 00:18:19,120
看起来就是在给游戏打补丁了，我们来看看能不能用

190
00:18:19,720 --> 00:18:25,700
需要记住游戏带驱动是不能用的，现在也没有加载驱动

191
00:18:25,780 --> 00:18:27,440
然后这就能用了

192
00:18:30,380 --> 00:18:36,360
不幸的是游戏并不支持通过 Adlib 播放音效，
这要求使用声霸卡

193
00:18:36,360 --> 00:18:40,060
但至少游戏有音乐了，比此前好很多了

194
00:18:43,440 --> 00:18:47,680
不过补丁仍然是试验阶段，他们仍然在改进

195
00:18:47,680 --> 00:18:51,160
我想到了后续会支持更多游戏

196
00:18:51,240 --> 00:18:56,260
Heretic 实际上他们都没有确定支持，但我这里测试还是能用

197
00:18:56,260 --> 00:18:58,880
我怀疑他们还没测试这个游戏吧

198
00:18:58,880 --> 00:19:02,000
还有办法支持更多游戏

199
00:19:02,000 --> 00:19:10,160
这就要鼓励现在的 DOS 游戏开发者添加对它的原生支持

200
00:19:10,160 --> 00:19:14,340
比如说这个正在开发的 CGA 游戏现在就支持它

201
00:19:14,340 --> 00:19:17,880
它叫 Castle Viana，仍处于早期开发阶段

202
00:19:17,880 --> 00:19:21,040
但是开发者已经支持这个外设了

203
00:19:21,040 --> 00:19:25,780
至于我的话，我打算把 Planet X2 移植到 DOS 上

204
00:19:25,780 --> 00:19:30,580
我就正在做这个工作了，而且我也打算原生支持它

205
00:19:30,920 --> 00:19:36,560
然后我要说的是它能够在任何 5V 电源下运作

206
00:19:36,560 --> 00:19:44,260
它留了这两个焊盘就是给你外接任何形式的电源的

207
00:19:44,460 --> 00:19:49,500
比如说，对于笔记本你可以利用 PS/2 接口供电

208
00:19:49,500 --> 00:19:51,740
如果你不想外接电源的话

209
00:19:52,040 --> 00:19:56,340
如果你想知道在哪里得到这个外设的话

210
00:19:56,340 --> 00:20:02,400
如果你住在欧洲，那你可以在 Serdashop 购买，
我会在视频介绍里贴出地址

211
00:20:02,400 --> 00:20:10,260
在北美的话，我的网店也进了 40 个

212
00:20:10,260 --> 00:20:16,800
且以套件和成品的形式出售

213
00:20:16,840 --> 00:20:20,100
如果你不喜欢自己焊接套件的话

214
00:20:20,100 --> 00:20:22,940
你可以就买套件或是成品

215
00:20:22,940 --> 00:20:27,140
我不知道 40 个够不够，也许今晚就会售罄

216
00:20:27,140 --> 00:20:29,840
如果是的话那我会再进一批

217
00:20:29,840 --> 00:20:34,200
直到新批次出来之前，这就是我一直要在
我网店出售的了

218
00:20:34,200 --> 00:20:40,080
说到新批次，Serge 就正在开发一个
使用了 OPL3 芯片的版本

219
00:20:40,080 --> 00:20:45,420
虽然不是很多游戏支持它，但是它是全贴片

220
00:20:45,540 --> 00:20:50,040
由机器装配，这样就可以降低生产成本

221
00:20:50,040 --> 00:20:55,440
所有的 OPL2 版都是以手工焊接好的成品或是套件出售

222
00:20:55,440 --> 00:21:00,680
2018 年前能不能发布还说不清楚

223
00:21:00,680 --> 00:21:04,800
如果真的想要的话，那么你也许会买 OPL2 版

224
00:21:04,800 --> 00:21:07,260
那么这一集我想到这里就结束了

225
00:21:07,260 --> 00:21:11,100
感谢观看，记得关注，我们下次再见

