1
00:00:15,369 --> 00:00:18,330
你有想过主机游戏是怎么开发出来的吗？

2
00:00:18,330 --> 00:00:24,295
答案是，借助特殊的硬件
称为 “开发套件” 或 “开发机”

3
00:00:24,295 --> 00:00:28,132
早在 NES 时代，开发机就已经出现了

4
00:00:28,132 --> 00:00:38,559
通常游戏厂商要与主机厂商
签订保密协议（NDA），然后才能获得开发机

5
00:00:38,559 --> 00:00:46,609
开发机通常不会流出到普通大众市场
起码要等到多年之后硬件过时的时候才会有

6
00:00:46,609 --> 00:00:53,449
如果你非常幸运能搞到一台开发机
里面可能会有未发行的游戏

7
00:00:53,449 --> 00:00:59,246
有很多开发过程中的测试版游戏
都是在开发机中发现的

8
00:00:59,246 --> 00:01:02,416
如果你是收藏家
搞一台开发机是非常酷的事情

9
00:01:02,416 --> 00:01:06,629
一般开发机的外观设计与零售版相同

10
00:01:06,629 --> 00:01:08,672
但会包含特有的功能

11
00:01:08,672 --> 00:01:17,598
比如说特别的主界面，更多的内存或更高的性能
不同的颜色，以及更多的通信接口等

12
00:01:17,598 --> 00:01:23,854
你应该听说过 United Front Games
他们的《热血无赖》非常出名

13
00:01:23,854 --> 00:01:25,523
他们在去年（2016）倒闭了

14
00:01:25,523 --> 00:01:33,197
一个幸运儿以 100 美刀一台的价格
从他们手上买下了一批 PS4 开发机，因此出了名

15
00:01:33,197 --> 00:01:38,786
对于现世代主机的开发机来说
这可能会带来一些麻烦

16
00:01:38,786 --> 00:01:50,005
2012 年，在以《阿玛拉王国》系列著名的 38 Studios
遭破产清算之后，微软要求收回给他们的所有 Xbox 360 开发机

17
00:01:50,005 --> 00:01:55,052
为什么？因为实际上
这些开发机不归游戏厂商所有

18
00:01:55,052 --> 00:02:02,434
他们通常是与主机厂商签订授权协议
然后主机厂商提供开发机

19
00:02:02,434 --> 00:02:06,679
一旦协议中止
主机厂商就要收回开发机

20
00:02:06,679 --> 00:02:15,030
在这代主机过时之后
这些开发机一般都会被拆解回收

21
00:02:15,030 --> 00:02:20,120
接下来我们回到 2001 年
这台是初代 Xbox 绿色 Debug Kit（调试机）

22
00:02:20,120 --> 00:02:22,329
这是非常酷的机器

23
00:02:22,329 --> 00:02:27,877
不过严格说来
这些绿机子不是用于游戏开发的

24
00:02:27,877 --> 00:02:32,006
微软提供单独的 Development Kit
（开发机）给开发者

25
00:02:32,006 --> 00:02:36,552
调试机主要是用于 QA 测试

26
00:02:36,552 --> 00:02:40,598
监视游戏的内存和 GPU 占用

27
00:02:40,598 --> 00:02:44,760
确保游戏能通过微软的审核

28
00:02:44,760 --> 00:02:47,730
这些事情都要在游戏开发完成之前做好

29
00:02:50,816 --> 00:02:56,655
所以游戏厂商用这种
Xbox 调试机（开发机）开发和测试游戏

30
00:02:56,655 --> 00:03:00,367
在 2001 年 Xbox 被破解之后

31
00:03:00,367 --> 00:03:05,670
大部分自制软件和模拟器
也是在这上面开发的

32
00:03:05,670 --> 00:03:08,918
那我们就来详细看一下
这台 Xbox 调试机

33
00:03:10,461 --> 00:03:16,830
乍一眼你可能会觉得
这很像绿色的 Halo 限定机

34
00:03:16,830 --> 00:03:21,180
它们的外壳都是一样的
不过调试机上印有 “DEBUG KIT” 字样

35
00:03:21,180 --> 00:03:25,726
机器后面的接口也和零售版本相同

36
00:03:25,726 --> 00:03:28,354
那接下来我们就拆机看看内部吧

37
00:03:29,521 --> 00:03:35,361
拆机过程就不演示了
因为跟零售版一模一样

38
00:03:35,361 --> 00:03:41,909
机器带有原厂的光驱和 8GB 硬盘
跟零售版的一样

39
00:03:41,909 --> 00:03:44,130
那这到底有什么区别呢

40
00:03:44,130 --> 00:03:54,672
首先主板上有两块额外的 32MB 内存芯片
将内存容量提高到 128MB

41
00:03:54,672 --> 00:04:01,140
开发机通常会搭载更多的内存
原因后面会讲到

42
00:04:01,140 --> 00:04:07,309
当然零售版也可以自己魔改升级内存

43
00:04:07,309 --> 00:04:14,316
一些模拟器能用上额外的内存
如 CoinOPS、MAME 和 Surreal64

44
00:04:14,316 --> 00:04:19,029
《VR 战警 3》是 Chihiro 街机基板
（Xbox 互换）上的游戏

45
00:04:19,029 --> 00:04:25,953
世嘉当时正在开发单独的 Xbox 版本
但因成本问题最终被砍

46
00:04:25,953 --> 00:04:33,585
但是有人能在 Xbox 上启动游戏
它只能在带 128MB 内存的 Xbox 上运行

47
00:04:34,753 --> 00:04:36,922
最大的不同是系统主界面（Dashboard）

48
00:04:36,922 --> 00:04:44,138
跟零售机不同，开发机有一个
完全不同的主界面，称为 “XDK Launcher”

49
00:04:44,138 --> 00:04:48,559
在这里你可以启动
硬盘上的任何 Xbox 程序和游戏

50
00:04:48,559 --> 00:05:02,489
开发机有一个 “Debug IP”
独立于普通的 IP，用于连接到电脑进行开发调试

51
00:05:02,489 --> 00:05:10,831
XDK Launcher 也可以修改机器的区域
以及在 NTSC 和 PAL 制式之间切换

52
00:05:10,831 --> 00:05:15,044
这些功能在零售机上都需要破解才能实现

53
00:05:15,044 --> 00:05:20,500
XDK Launcher 附带了
几个演示程序，你也许会见过

54
00:05:38,859 --> 00:05:45,032
Xbox 调试机
确实有很多独特的功能

55
00:05:45,032 --> 00:05:47,951
但游戏、模拟器和自制软件
到底是怎么开发的呢？

56
00:05:47,951 --> 00:05:50,662
接下来我们就来看看

57
00:05:50,662 --> 00:05:55,334
调试机（开发机）的真正能力
在你把它与 PC 配对之后才会显现

58
00:05:55,334 --> 00:06:00,923
因为这是十六年前的老古董了
所以我用的是运行 Windows XP 的虚拟机

59
00:06:00,923 --> 00:06:05,552
通过这个工具，我们可以将
PC 与 Xbox 调试机（开发机）相连接

60
00:06:05,552 --> 00:06:10,724
只需要提供 Xbox 的设备名或 Debug IP 即可

61
00:06:10,724 --> 00:06:16,688
连接建立之后
我们就可以在 PC 上远程控制 Xbox

62
00:06:17,940 --> 00:06:23,737
在这里我们可以浏览 Xbox 硬盘的内容
远程启动上面的程序和游戏

63
00:06:23,730 --> 00:06:27,650
我们可以截图

64
00:06:27,658 --> 00:06:35,874
Xbox 会将显存的内容
保存下来，并通过网络将位图传给 PC

65
00:06:35,874 --> 00:06:40,504
我们也可以远程进行热重启或冷重启

66
00:06:40,504 --> 00:06:45,384
文件管理系统跟资源管理器整合

67
00:06:45,384 --> 00:06:51,473
可以直接拖拽，复制粘贴和删除文件
就像管理本地文件一样

68
00:06:51,473 --> 00:06:56,895
这使得与 Xbox 调试机（开发机）之间
传送文件变得非常简单

69
00:06:56,895 --> 00:07:01,775
而不用像破解的零售机一样
需要通过 FTP 什么的

70
00:07:02,860 --> 00:07:07,448
如果你是开发者，你也许会听说过
Microsoft Visual C++

71
00:07:07,448 --> 00:07:11,910
它后来被整合到 .Net（Visual Studio）套件中

72
00:07:11,910 --> 00:07:20,210
有一套 Xbox SDK 可以安装到 VC++ 上

73
00:07:20,210 --> 00:07:33,640
它可以用来编译面向 Xbox 平台的程序
并通过网络传送给 Xbox

74
00:07:33,640 --> 00:07:40,481
所以使用 VS2003
我们可以编写面向 Xbox 平台的代码

75
00:07:40,481 --> 00:07:46,319
视频做了加速处理
不过我正在写的是一个离子体特效

76
00:07:46,319 --> 00:07:48,864
跟九十年代的演示程序中的类似

77
00:07:48,864 --> 00:07:55,537
由于可以进行远程调试
程序的编写效率变得非常高

78
00:07:55,537 --> 00:08:02,961
你还可以在任何位置
暂停程序的运行，查看内存和显存的内容

79
00:08:02,961 --> 00:08:07,174
就跟面向本地 PC 开发一样

80
00:08:07,174 --> 00:08:12,930
Halo Mod 社区因为这些能力
也在使用开发机

81
00:09:02,729 --> 00:09:09,194
默认情况下
开发机是读不了零售游戏光盘的

82
00:09:09,194 --> 00:09:17,619
但有人做了个补丁
让开发机可以玩零售游戏

83
00:09:22,624 --> 00:09:28,046
一个经常问到的问题是
怎么将一台零售 Xbox 改造成开发机

84
00:09:28,046 --> 00:09:31,091
毕竟它们的主板几乎是一样的

85
00:09:31,091 --> 00:09:33,719
好消息是，这并不难

86
00:09:33,719 --> 00:09:39,516
有一些自制的 debug BIOS
可以刷到零售机上

87
00:09:39,516 --> 00:09:42,019
你还需要替换你的 Xbox 主界面

88
00:09:42,019 --> 00:09:50,444
另外别忘了你只有 64MB 内存
有些功能可能无法正常工作

89
00:09:50,444 --> 00:09:52,029
最后希望大家能喜欢这个视频

90
00:09:52,029 --> 00:09:54,364
在评论区里分享一下你的想法

91
00:09:54,364 --> 00:09:59,620
最后别忘了点赞和关注~
我们下期见

92
00:10:00,162 --> 00:10:01,620
（翻译：driver1998）

93
00:10:11,131 --> 00:10:12,633
用一份...

94
00:10:14,384 --> 00:10:17,095
今天 *** 的老不在状态...
我这是咋了...

